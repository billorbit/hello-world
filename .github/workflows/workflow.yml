name: Infra Setup/Destroy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      buildType:
        description: "Build Type"
        required: true

jobs:
  terraform:
    if: github.event.inputs.buildType == 'setup' || github.event.inputs.buildType == 'destroy'
    name: "Terraform"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_region: "ap-south-1"
      TF_VAR_aws_resource_prefix: "ankit"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform -chdir="terraform_setup" init

      - name: Terraform Plan
        id: plan
        if: github.event.inputs.buildType == 'setup'
        run: terraform -chdir="terraform_setup" plan -input=false

      - name: Terraform Plan Status
        if: github.event.inputs.buildType == 'setup' && steps.plan.outcome == 'failure'
        run: |
          echo 'Terraform plan failed, so exiting'
          exit 1

      - name: Terraform Apply
        if: github.event.inputs.buildType == 'setup'
        run: terraform -chdir="terraform_setup" apply -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.buildType == 'destroy'
        run: terraform -chdir="terraform_setup" destroy -auto-approve
